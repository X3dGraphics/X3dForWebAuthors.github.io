#VRML V2.0 utf8
# X3D-to-VRML-97 XSL translation autogenerated by X3dToVrml97.xslt
# https://www.web3d.org/x3d/content/X3dToVrml97.xslt
# Generated using XSLT processor: Saxonica

# [X3D] VRML V3.3 utf8
# PROFILE Immersive
# [X3D] version=3.3
# [X3D] noNamespaceSchemaLocation=http://www.web3d.org/specifications/x3d-3.3.xsd
# [head]

# META "title" "StringSensor.x3d"
# META "description" "A StringSensor example that displays typed text in the world."
# META "creator" "Leonard Daly and Don Brutzman"
# META "created" "7 June 2006"
# META "modified" "20 October 2019"
# META "reference" "http://X3dGraphics.com"
# META "reference" "https://www.web3d.org/x3d/content/examples/X3dResources.html"
# META "rights" "Copyright (c) 2006, Daly Realism and Don Brutzman"
# META "subject" "X3D book, X3D graphics, X3D-Edit, http://www.x3dGraphics.com"
# META "identifier" "http://X3dGraphics.com/examples/X3dForWebAuthors/Chapter08UserInteractivity/StringSensor.x3d"
# META "generator" "X3D-Edit 3.3, https://savage.nps.edu/X3D-Edit"
# META "license" "../license.html"

# [Scene] ========== ========== ==========

NavigationInfo { type [ "EXAMINE" "ANY" ] } ###  Default X3D NavigationInfo

WorldInfo {
  title "StringSensor.x3d"
}
Background {
  skyColor [ 1 1 1 ]
}
Viewpoint {
  description "Book View"
  position -0.02 0.01 6.85
}
DEF GenText StringSensor {
}
Transform {
  translation 0 0.8 0
  children [
      Transform {
        translation 0 0 -.1
        children [
            Shape {
              appearance Appearance {
                material Material {
                  diffuseColor 1 1 .6
                }
              }
              geometry Box {
                size 8 1.5 .01
              }
            }
        ]
      }
      Transform {
        translation -3.8 0.2 0
        children [
            Shape {
              appearance Appearance {
                material Material {
                  diffuseColor 0 0 1
                }
              }
              geometry DEF DisplayText Text {
                fontStyle FontStyle {
                  justify [ "BEGIN" "MIDDLE"  ] 
                  size 0.75
                }
              }
            }
        ]
      }
      # convert StringSensor SFString into Text node MFString by using explicit typecasting in ECMAScript
      DEF Converter Script {
        eventIn      SFString	SFString_MFString
        eventOut     MFString	MFString_out
        eventOut     SFFloat	SFFloat_Xout
        eventOut     SFFloat	SFFloat_Yout
        eventOut     SFFloat	SFFloat_Zout

	url [ "StringSensorScriptConverter.js" "http://X3dGraphics.com/examples/X3dForWebAuthors/Chapter08UserInteractivity/StringSensorScriptConverter.js"
 ]
      }
      Transform {
        translation 0 -1.25 0
        children [
            Group {
              children [
                  Shape {
                    geometry Text {
                      string [ "StringSensor lets users enter text..." "please type to test" ]
                      fontStyle FontStyle {
                        family [ "SANS"  ] 
                        justify [ "MIDDLE" "BEGIN"  ] 
                        size 0.5
                      }
                    }
                    appearance Appearance {
                      material Material {
                        diffuseColor 0.7 0.7 0.7
                      }
                    }
                  }
              ]
            }
        ]
      }
  ]
ROUTE GenText.enteredText TO Converter.SFString_MFString
ROUTE Converter.MFString_out TO DisplayText.string
}
