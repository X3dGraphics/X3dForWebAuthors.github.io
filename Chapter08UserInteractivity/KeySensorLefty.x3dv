#X3D V3.3 utf8
# X3D-to-ClassicVRML XSL translation autogenerated by X3dToVrml97.xslt
# https://www.web3d.org/x3d/content/X3dToVrml97.xslt
# Generated using XSLT processor: Saxonica

PROFILE Immersive
# [X3D] version=3.3
# [X3D] noNamespaceSchemaLocation=https://www.web3d.org/specifications/x3d-3.3.xsd
# [head]

META "title" "KeySensorLefty.x3d"
META "description" "A KeySensor is used to change relative Viewpoints looking at the shark Lefty, while a SphereSensor can also rotate Lefty in place."
META "creator" "Leonard Daly and Don Brutzman"
META "created" "10 June 2006"
META "modified" "20 October 2019"
META "reference" "https://X3dGraphics.com"
META "reference" "https://www.web3d.org/x3d/content/examples/X3dResources.html"
META "rights" "Copyright 2006, Leonard Daly and Don Brutzman"
META "subject" "X3D book, X3D graphics, X3D-Edit, http://www.x3dGraphics.com"
META "identifier" "https://X3dGraphics.com/examples/X3dForWebAuthors/Chapter08UserInteractivity/KeySensorLefty.x3d"
META "generator" "X3D-Edit 3.3, https://savage.nps.edu/X3D-Edit"
META "license" "../license.html"

# [Scene] ========== ========== ==========

NavigationInfo { type [ "EXAMINE" "ANY" ] } ###  Default X3D NavigationInfo

WorldInfo {
  title "KeySensorLefty.x3d"
}
Background {
  skyColor [ 1 1 1 ]
}
DEF LeftyViewpointsUnrotated Group {
  children [
      DEF View1 Viewpoint {
        description "Lefty from the Right"
      }
      DEF View2 Viewpoint {
        description "Lefty from the Front"
        orientation 0 1 0 1.57
        position 10 0 0
      }
      DEF View3 Viewpoint {
        description "Lefty from the Left"
        orientation 0 1 0 3.14
        position 0 0 -10
      }
      DEF View4 Viewpoint {
        description "Lefty from Behind"
        orientation 0 1 0 -1.57
        position -10 0 0
      }
      DEF View5 Viewpoint {
        description "Lefty from the Top"
        orientation 1 0 0 -1.57
        position 0 10 0
      }
      DEF View6 Viewpoint {
        description "Lefty from the Bottom"
        orientation 1 0 0 1.57
        position 0 -10 0
      }
  ]
}
Transform {
  translation -2 2 0
  children [
      Billboard {
        axisOfRotation 0 0 0
        children [
            Shape {
              appearance Appearance {
                material Material {
                  diffuseColor 0 0 0
                }
              }
              geometry Text {
                string [ "Press 'n' key for next Viewpoint," "press 'p' key ppnnfor previous Viewpoint." ]
                fontStyle FontStyle {
                  family [ "SANS"  ] 
                  justify [ "BEGIN" "BEGIN"  ] 
                  size 0.5
                }
              }
            }
        ]
      }
  ]
}
DEF OrientationControl Transform {
  translation 2 -2 3
  children [
      DEF Rotator SphereSensor {
        description "Select and drag to rotate"
      }
      DEF OrientationDisplay Transform {
        children [
            Shape {
              appearance Appearance {
                material Material {
                  diffuseColor 0 0 1
                }
              }
              geometry Sphere {
                radius .5
              }
            }
        ]
      }
  ]
}
Transform {
  scale 3 3 3
  children [
      DEF ReOrient Transform {
        children [
            Inline {
              url [ "../KelpForestExhibit/SharkLefty.x3d" "https://X3dGraphics.com/examples/X3dForWebAuthors/KelpForestExhibit/SharkLefty.x3d" "../KelpForestExhibit/SharkLefty.wrl" "https://X3dGraphics.com/examples/X3dForWebAuthors/KelpForestExhibit/SharkLefty.wrl" ]
            }
        ]
      }
  ]
}
ROUTE Rotator.rotation_changed TO OrientationDisplay.rotation
ROUTE Rotator.rotation_changed TO ReOrient.rotation
DEF KeyDetector KeySensor {
}
DEF KeyHandler Script {
  inputOnly      SFString	keyPress
  initializeOnly SFInt32	viewpointIndex 1
  outputOnly     SFBool	bind_View1
  outputOnly     SFBool	bind_View2
  outputOnly     SFBool	bind_View3
  outputOnly     SFBool	bind_View4
  outputOnly     SFBool	bind_View5
  outputOnly     SFBool	bind_View6

	url [ "KeySensorLeftyScript.js" "https://X3dGraphics.com/examples/X3dForWebAuthors/Chapter08UserInteractivity/KeySensorLeftyScript.js"
 ]
}
ROUTE KeyDetector.keyPress TO KeyHandler.keyPress
ROUTE KeyHandler.bind_View1 TO View1.set_bind
ROUTE KeyHandler.bind_View2 TO View2.set_bind
ROUTE KeyHandler.bind_View3 TO View3.set_bind
ROUTE KeyHandler.bind_View4 TO View4.set_bind
ROUTE KeyHandler.bind_View5 TO View5.set_bind
ROUTE KeyHandler.bind_View6 TO View6.set_bind
