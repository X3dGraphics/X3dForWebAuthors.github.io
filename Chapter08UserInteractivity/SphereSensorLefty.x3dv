#X3D V3.3 utf8
# X3D-to-ClassicVRML XSL translation autogenerated by X3dToVrml97.xslt
# https://www.web3d.org/x3d/content/X3dToVrml97.xslt
# Generated using XSLT processor: Saxonica

PROFILE Immersive
# [X3D] version=3.3
# [X3D] noNamespaceSchemaLocation=https://www.web3d.org/specifications/x3d-3.3.xsd
# [head]

META "title" "SphereSensorLefty.x3d"
META "description" "Using a separate SphereSensor, Lefty shark can be oriented in any direction by remote control. Navigation locked so that no other scene rotation is possible."
META "creator" "Leonard Daly and Don Brutzman"
META "created" "10 June 2006"
META "modified" "20 October 2019"
META "warning" "Xj3D not supporting SphereSensor autoOffset field correctly"
META "reference" "https://X3dGraphics.com"
META "reference" "https://www.web3d.org/x3d/content/examples/X3dResources.html"
META "rights" "Copyright 2006, Leonard Daly and Don Brutzman"
META "subject" "X3D book, X3D graphics, X3D-Edit, http://www.x3dGraphics.com"
META "identifier" "https://X3dGraphics.com/examples/X3dForWebAuthors/Chapter08UserInteractivity/SphereSensorLefty.x3d"
META "generator" "X3D-Edit 3.3, https://savage.nps.edu/X3D-Edit"
META "license" "../license.html"

# [Scene] ========== ========== ==========

WorldInfo {
  title "SphereSensorLefty.x3d"
}
Background {
  skyColor [ 1 1 1 ]
}
DEF LockUserSceneRotation NavigationInfo {
  type [ "NONE"  ] 
}
Viewpoint {
  description "Book View"
  orientation 0 -1 0 0.05
  position -0.06 -0.29 8.78
}
DEF UserInterfaceTranslation Transform {
  translation 2 -2 3
  children [
      # Note that splitting the single Transform into two, and embedding SphereSensor here, shields it from affecting other nodes in scene
      DEF Rotator SphereSensor {
        description "drag sphere to rotate Lefty"
      }
      # this nested Transform allows rotation about the center of the local coordinate frame
      DEF UserInterfaceRotation Transform {
        children [
            Shape {
              appearance Appearance {
                material Material {
                  diffuseColor 0 0 1
                }
              }
              geometry Sphere {
                radius .5
              }
            }
        ]
      }
  ]
}
# note that the shark is translated to a different coordinate reference frame, so the SphereSensor is like a remote control
DEF SharkRotation Transform {
  translation 0 0 7
  children [
      Inline {
        url [ "../KelpForestExhibit/SharkLefty.x3d" "https://X3dGraphics.com/examples/X3dForWebAuthors/KelpForestExhibit/SharkLefty.x3d" "../KelpForestExhibit/SharkLefty.wrl" "https://X3dGraphics.com/examples/X3dForWebAuthors/KelpForestExhibit/SharkLefty.wrl" ]
      }
  ]
}
ROUTE Rotator.rotation_changed TO SharkRotation.rotation
# note that the shark will rotate without this ROUTE but that user interaction feels smoother and more natural
ROUTE Rotator.rotation_changed TO UserInterfaceRotation.rotation
