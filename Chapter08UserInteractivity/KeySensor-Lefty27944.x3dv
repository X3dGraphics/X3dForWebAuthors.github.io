#X3D V3.1 utf8
# X3D-to-ClassicVRML XSL translation autogenerated by X3dToVrml97.xslt
# http://www.web3d.org/x3d/content/X3dToVrml97.xslt
# Generated using XSLT processor: SAXON 8.7 from Saxonica

PROFILE Immersive
# [X3D] version=3.1
# [X3D] noNamespaceSchemaLocation=http://www.web3d.org/specifications/x3d-3.1.xsd
# [head]

META "title" "KeySensor-Lefty.x3d"
META "description" "A KeySensor is used to change Viewpoints of the shark Lefty."
META "creator" "Leonard Daly and Don Brutzman"
META "created" "10 June 2006"
META "modified" "10 February 2008"
META "reference" "http://X3dGraphics.com"
META "reference" "http://www.web3d.org/x3d/content/examples/help.html"
META "rights" "Copyright 2006, Leonard Daly and Don Brutzman"
META "subject" "X3D book, X3D graphics, X3D-Edit, http://www.x3dGraphics.com"
META "identifier" "http://X3dGraphics.com/examples/X3dForWebAuthors/Chapter08-UserInteractivity/KeySensor-Lefty.x3d"
META "generator" "X3D-Edit, https://savage.nps.edu/X3D-Edit"
META "license" "../license.html"

# [Scene] ========== ========== ==========

NavigationInfo { type [ "EXAMINE" "ANY" ] } ###  Default X3D NavigationInfo

Background {
  skyColor [ 1 1 1 ]
}
Group {
  children [
      DEF View1 Viewpoint {
        description "From the Front"
      }
      DEF View2 Viewpoint {
        description "From the Right"
        orientation 0 1 0 1.57
        position 10 0 0
      }
      DEF View3 Viewpoint {
        description "From Behind"
        orientation 0 1 0 3.14
        position 0 0 -10
      }
      DEF View4 Viewpoint {
        description "From the Left"
        orientation 0 1 0 -1.57
        position -10 0 0
      }
      DEF View5 Viewpoint {
        description "From the Top"
        orientation 1 0 0 -1.57
        position 0 10 0
      }
      DEF View6 Viewpoint {
        description "From the Bottom"
        orientation 1 0 0 1.57
        position 0 -10 0
      }
  ]
}
Transform {
  translation -2 2 0
  children [
      Billboard {
        axisOfRotation 0 0 0
        children [
            Shape {
              appearance Appearance {
                material Material {
                  diffuseColor 0 0 0
                }
              }
              geometry Text {
                string [ "Press 'n' for next Viewpoint," "press 'p' for previous Viewpoint." ]
                fontStyle FontStyle {
                  family [ "SANS" ]
                  justify [ "BEGIN" "BEGIN"  ] 
                  size 0.5
                }
              }
            }
        ]
      }
  ]
}
DEF OrientationControl Transform {
  translation 2 -2 3
  children [
      DEF Rotator SphereSensor {
      }
 ### Hint:  need description attribute, such as <SphereSensor description='click and drag to rotate'/>
      DEF OrientationDisplay Transform {
        children [
            Shape {
              appearance Appearance {
                material Material {
                  diffuseColor 0 0 1
                }
              }
              geometry Sphere {
                radius .5
              }
            }
        ]
      }
  ]
}
Transform {
  scale 3 3 3
  children [
      DEF ReOrient Transform {
        children [
            Inline {
              url [ "../KelpForestExhibit/SharkLefty.x3d" "../KelpForestExhibit/SharkLefty.wrl" "http://X3dGraphics.com/examples/X3dForWebAuthors/KelpForestExhibit/SharkLefty.x3d" "http://X3dGraphics.com/examples/X3dForWebAuthors/KelpForestExhibit/SharkLefty.wrl" ]
            }
        ]
      }
  ]
}
ROUTE Rotator.rotation_changed TO OrientationDisplay.rotation
ROUTE Rotator.rotation_changed TO ReOrient.rotation
DEF KeyDetector KeySensor {
  enabled TRUE
}
DEF KeyHandler Script {
  inputOnly      SFString	keyPress
  initializeOnly SFInt32	ptr 1
  outputOnly     SFBool	bind_View1
  outputOnly     SFBool	bind_View2
  outputOnly     SFBool	bind_View3
  outputOnly     SFBool	bind_View4
  outputOnly     SFBool	bind_View5
  outputOnly     SFBool	bind_View6

	url [ "keySensor.js" "http://X3dGraphics.com/examples/X3dForWebAuthors/Chapter08-UserInteractivity/keySensor.js"
 ]
}
ROUTE KeyDetector.keyPress TO KeyHandler.keyPress
ROUTE KeyHandler.bind_View1 TO View1.set_bind
ROUTE KeyHandler.bind_View2 TO View2.set_bind
ROUTE KeyHandler.bind_View3 TO View3.set_bind
ROUTE KeyHandler.bind_View4 TO View4.set_bind
ROUTE KeyHandler.bind_View5 TO View5.set_bind
ROUTE KeyHandler.bind_View6 TO View6.set_bind
