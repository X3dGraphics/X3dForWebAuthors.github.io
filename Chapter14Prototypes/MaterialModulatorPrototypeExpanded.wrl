#VRML V2.0 utf8
# X3D-to-VRML-97 XSL translation autogenerated by X3dToVrml97.xslt
# https://www.web3d.org/x3d/content/X3dToVrml97.xslt
# Generated using XSLT processor: Saxonica

# [X3D] VRML V3.3 utf8
# PROFILE Immersive
# [X3D] version=3.3
# [X3D] noNamespaceSchemaLocation=https://www.web3d.org/specifications/x3d-3.3.xsd
# [head]

# META "title" "MaterialModulatorPrototypeExpanded.x3d"
# META "description" "Provide example for expansion of a MaterialModulator as regular X3D nodes, rather than a ProtoDeclare/ProtoInstance combination. MaterialModulator mimics a Material node and modulates diffuseColor field as an animation effect."
# META "creator" "Don Brutzman, John Carlson, Roy Walmsley"
# META "created" "2 July 2016"
# META "modified" "20 October 2019"
# META "subject" "X3D prototype expander, IS/connect, Script inputOutput field"
# META "Image" "MaterialModulator.png"
# META "reference" "MaterialModulator.x3d"
# META "reference" "JSON prototype expander https://github.com/coderextreme/X3DJSONLD"
# META "TODO" "Create corresponding web page describing Prototype Expander design."
# META "TODO" "Create stylesheet converter matching this Prototype Expander design pattern."
# META "TODO" "Add external ROUTEs to original example as a further test case for Prototype Expander design."
# META "reference" "https://github.com/coderextreme/X3DJSONLD/blob/master/PrototypeExpander.js"
# META "reference" "https://github.com/coderextreme/X3DJSONLD/blob/master/ServerPrototypeExpander.js"
# META "reference" "X3D Tooltips: ProtoBody https://www.web3d.org/x3d/content/X3dTooltips.html#ProtoBody"
# META "reference" "4.4.4.3 PROTO definition semantics https://www.web3d.org/documents/specifications/19775-1/V3.3/Part01/concepts.html#PROTOdefinitionsemantics"
# META "reference" "[x3d-public] Prototype Expander, Question on design of instance expansions: http://web3d.org/pipermail/x3d-public_web3d.org/2016-July/004982.html"
# META "identifier" "https://X3dGraphics.com/examples/X3dForWebAuthors/Chapter14Prototypes/MaterialModulatorPrototypeExpanded.x3d"
# META "generator" "X3D-Edit 3.3, https://savage.nps.edu/X3D-Edit"
# META "license" "../license.html"

# [Scene] ========== ========== ==========

NavigationInfo { type [ "EXAMINE" "ANY" ] } ###  Default X3D NavigationInfo

WorldInfo {
  title "MaterialModulatorPrototypeExpanded.x3d"
}
Shape {
  geometry Sphere {
  }
  appearance Appearance {
    material DEF MaterialModulatorNodeExpanded1 Material {
      diffuseColor 0.5 0.1 0.1
    }
  }
}
# Prototype Expander design note: only first node (the node type) of the prototype is renderable above. when Switch is first allowed
DEF HideAdditionalPrototypeBodyNodesExpanded1 Switch {
  whichChoice -1
  choice [
    # Prototype Expander design note: all children inside a Switch continue to receive/send events.
    Group {
      children [
          # Prototype Expander design note: additional follow-on nodes from the original ProtoBody are placed here.
          DEF MaterialModulatorScriptExpanded1 Script {
             ### Warning:  Script field 'enabled' has accessType 'inputOutput' (exposedField), which is only allowed in X3D Script node, not VRML97 Script node. Using exposedField anyway, may cause errors.
exposedField  SFBool	enabled TRUE
             ### Warning:  Script field 'diffuseColor' has accessType 'inputOutput' (exposedField), which is only allowed in X3D Script node, not VRML97 Script node. Using exposedField anyway, may cause errors.
exposedField  SFColor	diffuseColor 0.5 0.1 0.1
            eventOut     SFColor	newColor
            eventIn      SFTime	clockTrigger

	url [ "javascript: // ### X3D Browser.print() not supported by all VRML97 viewers, instead simply using print()

function initialize ()
{
    newColor = diffuseColor; // start with correct color
}
function clockTrigger (timeValue)
{
    if (!enabled) return;
    red   = newColor.r;
    green = newColor.g;
    blue  = newColor.b;
    
    // note different modulation rates for each color component, % is modulus operator
    newColor = new SFColor ((red + 0.02) % 1, (green + 0.03) % 1, (blue + 0.04) % 1);   
    printing ('diffuseColor=(' + red +',' + green + ',' + blue + ') newColor=' + newColor.toString() + '\n');
}

        
" ]
          }
          # Clock tickles Script to wake up and compute a new value
          DEF ModulationClockExpanded1 TimeSensor {
            cycleInterval 0.1
            loop TRUE
          }
      ]
    ROUTE MaterialModulatorScriptExpanded1.newColor TO MaterialModulatorNodeExpanded1.diffuseColor
    ROUTE ModulationClockExpanded1.cycleTime TO MaterialModulatorScriptExpanded1.clockTrigger
    }
  ]
}
