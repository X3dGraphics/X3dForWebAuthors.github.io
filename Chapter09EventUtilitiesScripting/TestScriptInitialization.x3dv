#X3D V3.3 utf8
# X3D-to-ClassicVRML XSL translation autogenerated by X3dToVrml97.xslt
# https://www.web3d.org/x3d/content/X3dToVrml97.xslt
# Generated using XSLT processor: Saxonica

PROFILE Immersive
# [X3D] version=3.3
# [X3D] noNamespaceSchemaLocation=https://www.web3d.org/specifications/x3d-3.3.xsd
# [head]

META "title" "TestScriptInitialization.x3d"
META "description" "Test ability to perform Script initialize() method using ECMAsript"
META "creator" "Don Brutzman"
META "created" "16 February 2008"
META "modified" "20 October 2019"
META "reference" "https://X3dGraphics.com"
META "reference" "https://www.web3d.org/x3d/content/examples/X3dResources.html"
META "rights" "Copyright 2006, Daly Realism and Don Brutzman"
META "subject" "X3D book, X3D graphics, X3D-Edit, http://www.x3dGraphics.com"
META "identifier" "https://X3dGraphics.com/examples/X3dForWebAuthors/Chapter09EventUtilitiesScripting/TestScriptInitialization.x3d"
META "generator" "X3D-Edit 3.3, https://savage.nps.edu/X3D-Edit"
META "license" "../license.html"

# [Scene] ========== ========== ==========

NavigationInfo { type [ "EXAMINE" "ANY" ] } ###  Default X3D NavigationInfo

WorldInfo {
  title "TestScriptInitialization.x3d"
}
Shape {
  geometry DEF DisplayText Text {
    string [ "waiting for" "Script to initialize()..." ]
    fontStyle FontStyle {
      justify [ "MIDDLE" "MIDDLE"  ] 
    }
  }
  appearance Appearance {
    material Material {
      ambientIntensity 0
      diffuseColor 0 0 0
      emissiveColor 0 0.398733 1
      shininess 0.05
      specularColor 0.622449 0.622449 0.622449
    }
  }
}
DEF Initializer Script {
  outputOnly     MFString	initializeResult

	url [ "ecmascript: // ### X3D Browser.print() not supported by all VRML97 viewers, instead simply using print()


function initialize ()
{
    scriptName = 'TestScriptInitialization.x3d';
    Browser.print ('[' + scriptName + ' initialize() commmenced...]');

    initializeResult = new MFString (\"Script initialize() OK\");

    Browser.print ('[...' + scriptName + ' initialize() complete]');
}

    
" ]
}
ROUTE Initializer.initializeResult TO DisplayText.string
