#X3D V3.3 utf8
# X3D-to-ClassicVRML XSL translation autogenerated by X3dToVrml97.xslt
# https://www.web3d.org/x3d/content/X3dToVrml97.xslt
# Generated using XSLT processor: Saxonica

PROFILE Immersive
# [X3D] version=3.3
# [X3D] noNamespaceSchemaLocation=https://www.web3d.org/specifications/x3d-3.3.xsd
# [head]

META "title" "PositionOrientationInterpolatorsExample.x3d"
META "description" "Demonstrate use of PositionInterpolator and OrientationInterpolator to animate object motion."
META "creator" "Don Brutzman"
META "created" "29 January 2008"
META "modified" "20 October 2019"
META "MovingImage" "PositionOrientationInterpolatorsExample.mp4"
META "reference" "PositionOrientationInterpolatorsExampleTraced.x3d"
META "reference" "https://X3dGraphics.com"
META "reference" "https://www.web3d.org/x3d/content/examples/X3dResources.html"
META "rights" "Copyright Don Brutzman and Leonard Daly 2007"
META "subject" "X3D book, X3D graphics, X3D-Edit, http://www.x3dGraphics.com"
META "reference" "https://savage.nps.edu/Savage/Tools/Animation/WaypointInterpolatorExample.x3d"
META "identifier" "https://X3dGraphics.com/examples/X3dForWebAuthors/Chapter07EventAnimationInterpolation/PositionOrientationInterpolatorsExample.x3d"
META "generator" "X3D-Edit 3.3, https://savage.nps.edu/X3D-Edit"
META "license" "../license.html"

# [Scene] ========== ========== ==========

NavigationInfo { type [ "EXAMINE" "ANY" ] } ###  Default X3D NavigationInfo

WorldInfo {
  title "PositionOrientationInterpolatorsExample.x3d"
}
Viewpoint {
  description "Animation demo"
  orientation 1 0 0 -0.588003
  position 0 8 12
}
Viewpoint {
  centerOfRotation 5 0.1 5
  description "View from above"
  orientation 1 0 0 -1.570796
  position 0 15 0
}
DEF Pointer Transform {
  translation 1 0 1
  children [
      Transform {
        rotation 1 0 0 1.57
        children [
            Shape {
              geometry Cone {
                bottomRadius 0.5
                height 1.5
              }
              appearance Appearance {
                material DEF ConeMaterial Material {
                  diffuseColor 0.427451 1 0.160784
                }
              }
            }
        ]
      }
  ]
}
DEF Floor Shape {
  geometry Box {
    size 12 0.05 12
  }
  appearance Appearance {
    material Material {
      diffuseColor 0 0.262745 0.941176
    }
  }
}
# note that final value equals first value in keyValue array in order to support smooth looping
# first drive around the location
DEF PositionAnimator PositionInterpolator {
  key [ 0 0.2 0.25 0.45 0.5 0.7 0.75 0.95 1 ]
  keyValue [ -4 0 -4 -4 0 4 -4 0 4 4 0 4 4 0 4 4 0 -4 4 0 -4 -4 0 -4 -4 0 -4 ]
}
ROUTE PositionAnimator.value_changed TO Pointer.set_translation
# then rotate the pointer to match next direction while paused at each position
DEF OrientationAnimator OrientationInterpolator {
  key [ 0 0.2 0.25 0.45 0.5 0.7 0.75 0.95 1 ]
  keyValue [ 0 1 0 0 0 1 0 0 0 1 0 1.57 0 1 0 1.57 0 1 0 3.14 0 1 0 3.14 0 1 0 4.71 0 1 0 4.71 0 1 0 6.283 ]
}
# final rotation value is 2pi rather than 0 so that rotation animation is smooth, not flip-flopping
ROUTE OrientationAnimator.value_changed TO Pointer.set_rotation
# put TimeSensor clock last so that animation design pattern and ROUTE events flow upward
DEF AnimationClock TimeSensor {
  cycleInterval 10
  loop TRUE
}
ROUTE AnimationClock.fraction_changed TO PositionAnimator.set_fraction
ROUTE AnimationClock.fraction_changed TO OrientationAnimator.set_fraction
# notice that explanatory Text is placed later in scene although it is graphically located above driving plane
Transform {
  translation 0 4 0
  children [
      Billboard {
        axisOfRotation 0 0 0
        children [
            Shape {
              geometry Text {
                string [ "Animation using PositionInterpolator" "and OrientationInterpolator" ]
                fontStyle FontStyle {
                  justify [ "MIDDLE" "MIDDLE"  ] 
                  size 0.6
                }
              }
              appearance Appearance {
                material Material {
                }
              }
            }
        ]
      }
  ]
}
