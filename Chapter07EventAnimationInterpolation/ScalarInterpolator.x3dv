#X3D V3.3 utf8
# X3D-to-ClassicVRML XSL translation autogenerated by X3dToVrml97.xslt
# https://www.web3d.org/x3d/content/X3dToVrml97.xslt
# Generated using XSLT processor: Saxonica

PROFILE Immersive
# [X3D] version=3.3
# [X3D] noNamespaceSchemaLocation=http://www.web3d.org/specifications/x3d-3.3.xsd
# [head]

META "title" "ScalarInterpolator.x3d"
META "description" "Demonstrate use of ScalarInterpolator to animate transparency."
META "creator" "Don Brutzman"
META "created" "28 January 2008"
META "modified" "20 October 2019"
META "reference" "http://X3dGraphics.com"
META "reference" "https://www.web3d.org/x3d/content/examples/X3dResources.html"
META "rights" "Copyright Don Brutzman and Leonard Daly 2007"
META "subject" "X3D book, X3D graphics, X3D-Edit, http://www.x3dGraphics.com"
META "identifier" "http://X3dGraphics.com/examples/X3dForWebAuthors/Chapter07EventAnimationInterpolation/ScalarInterpolator.x3d"
META "generator" "X3D-Edit 3.3, https://savage.nps.edu/X3D-Edit"
META "license" "../license.html"

# [Scene] ========== ========== ==========

NavigationInfo { type [ "EXAMINE" "ANY" ] } ###  Default X3D NavigationInfo

WorldInfo {
  title "ScalarInterpolator.x3d"
}
Transform {
  translation 0 -1 0
  children [
      Shape {
        geometry Sphere {
          radius 2
        }
        appearance Appearance {
          material DEF SphereMaterial Material {
            diffuseColor 0.941176 0.027451 0
          }
        }
      }
  ]
}
# note that final value equals first value in keyValue array in order to support smooth looping
DEF TransparencyAnimator ScalarInterpolator {
  key [ 0 0.5 1 ]
  keyValue [ 0 1 0 ]
}
DEF AnimationClock TimeSensor {
  cycleInterval 8
  loop TRUE
}
ROUTE AnimationClock.fraction_changed TO TransparencyAnimator.set_fraction
ROUTE TransparencyAnimator.value_changed TO SphereMaterial.transparency
# notice that Text appears later in scene although it is located above Sphere
Transform {
  translation 0 1.5 0
  children [
      Shape {
        geometry Text {
          string [ "Animating transparency" "using ScalarInterpolator" ]
          fontStyle FontStyle {
            justify [ "MIDDLE" "MIDDLE"  ] 
          }
        }
        appearance DEF TextAppearance Appearance {
          material Material {
            diffuseColor 0 0.7 0.7
          }
        }
      }
  ]
}
