#X3D V3.3 utf8
# X3D-to-ClassicVRML XSL translation autogenerated by X3dToVrml97.xslt
# https://www.web3d.org/x3d/content/X3dToVrml97.xslt
# Generated using XSLT processor: Saxonica

PROFILE Immersive
# [X3D] version=3.3
# [X3D] noNamespaceSchemaLocation=https://www.web3d.org/specifications/x3d-3.3.xsd
# [head]

META "title" "TimeSensorChaining.x3d"
META "description" "Connecting TimeSensor nodes so that the completion of one behavior chain triggers another."
META "creator" "Don Brutzman and MV3204 class"
META "created" "2 September 2009"
META "modified" "20 October 2019"
META "warning" "under development"
META "identifier" "https://X3dGraphics.com/examples/X3dForWebAuthors/Chapter07EventAnimationInterpolation/TimeSensorChaining.x3d"
META "generator" "X3D-Edit 3.3, https://savage.nps.edu/X3D-Edit"
META "license" "../license.html"

# [Scene] ========== ========== ==========

NavigationInfo { type [ "EXAMINE" "ANY" ] } ###  Default X3D NavigationInfo

WorldInfo {
  title "TimeSensorChaining.x3d"
}
Viewpoint {
  description "TimeSensor chaining example"
  position 0 1 6
}
DEF DoorHingeTransform Transform {
  center -0.65 0 0
  translation 0 1 0
  children [
      DEF UserClick TouchSensor {
        description "click to operate door"
      }
      Shape {
        geometry Box {
          size 1.3 2.5 0.08
        }
        appearance Appearance {
          material DEF DoorColor Material {
            diffuseColor 1 0 0
          }
        }
      }
  ]
}
Transform {
  scale 0.6 0.6 0.6
  translation 0 -1 0
  children [
      DEF TextSwitcher Switch {
        whichChoice 0
        children [
          Group {
            children [
                Shape {
                  geometry Text {
                    string [ "Door is closed" ]
                    fontStyle DEF MiddleJustify FontStyle {
                      justify [ "MIDDLE" "MIDDLE"  ] 
                    }
                  }
                  appearance DEF TextAppearance Appearance {
                    material Material {
                    }
                  }
                }
            ]
          }
          Group {
            children [
                Shape {
                  geometry Text {
                    string [ "Door in motion..." ]
                    fontStyle USE MiddleJustify
                  }
                  appearance USE TextAppearance
                }
            ]
          }
          Group {
            children [
                Shape {
                  geometry Text {
                    string [ "Door is open" ]
                    fontStyle USE MiddleJustify
                  }
                  appearance USE TextAppearance
                }
            ]
          }
        ]
      }
  ]
}
# ===== open the door =====
DEF ClockNumber1 TimeSensor {
  cycleInterval 2
}
ROUTE UserClick.touchTime TO ClockNumber1.startTime
DEF DoorOpener OrientationInterpolator {
  key [ 0 0.5 1 ]
  keyValue [ 0 1 0 0 0 1 0 4.7124 0 1 0 3 ]
}
ROUTE ClockNumber1.fraction_changed TO DoorOpener.set_fraction
ROUTE DoorOpener.value_changed TO DoorHingeTransform.rotation
DEF SetTextInMotion IntegerTrigger {
  integerKey 1
}
ROUTE UserClick.isActive TO SetTextInMotion.set_boolean
ROUTE SetTextInMotion.triggerValue TO TextSwitcher.whichChoice
# ===== door is now open =====
DEF DoorOpenComplete BooleanFilter {
}
ROUTE ClockNumber1.isActive TO DoorOpenComplete.set_boolean
# disable ClockNumber1 by turning itself off when complete
ROUTE ClockNumber1.isActive TO ClockNumber1.enabled
DEF TriggerOpeningAnimation TimeTrigger {
}
ROUTE DoorOpenComplete.inputFalse TO TriggerOpeningAnimation.set_boolean
DEF ClockNumber2 TimeSensor {
  cycleInterval 0.5
}
ROUTE TriggerOpeningAnimation.triggerTime TO ClockNumber2.startTime
DEF SetTextOpen IntegerTrigger {
  integerKey 2
}
ROUTE DoorOpenComplete.inputFalse TO SetTextOpen.set_boolean
ROUTE SetTextOpen.triggerValue TO TextSwitcher.whichChoice
DEF DoorColorInterpolator ColorInterpolator {
  key [ 0 0.5 1 ]
  keyValue [ 1 0 0 0.1 0.1 0.1 0.203922 0.701961 0 ]
}
ROUTE ClockNumber2.fraction_changed TO DoorColorInterpolator.set_fraction
ROUTE DoorColorInterpolator.value_changed TO DoorColor.diffuseColor
# ===== shut the door =====
DEF ClockNumber3 TimeSensor {
  cycleInterval 2
  enabled FALSE
}
ROUTE UserClick.touchTime TO ClockNumber3.startTime
# enable ClockNumber3 once door is fully open
ROUTE DoorOpenComplete.inputFalse TO ClockNumber3.enabled
# disable ClockNumber3 by turning itself off when complete
ROUTE ClockNumber3.isActive TO ClockNumber3.enabled
DEF ClockReversal ScalarInterpolator {
  key [ 0 1 ]
  keyValue [ 1 0 ]
}
ROUTE ClockNumber3.fraction_changed TO ClockReversal.set_fraction
ROUTE ClockReversal.value_changed TO DoorOpener.set_fraction
ROUTE ClockReversal.value_changed TO DoorColorInterpolator.set_fraction
# enable ClockNumber1 when door is fully shut
DEF Clock3CompleteTrigger BooleanTrigger {
}
ROUTE ClockNumber3.stopTime TO Clock3CompleteTrigger.set_triggerTime
DEF SetTextShut IntegerTrigger {
  integerKey 0
}
ROUTE Clock3CompleteTrigger.triggerTrue TO SetTextShut.set_boolean
ROUTE SetTextShut.triggerValue TO TextSwitcher.whichChoice
