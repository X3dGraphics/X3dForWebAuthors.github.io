<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<svrl:schematron-output xmlns:xs="http://www.w3.org/2001/XMLSchema"
                        xmlns:schold="http://www.ascc.net/xml/schematron"
                        xmlns:iso="http://purl.oclc.org/dsdl/schematron"
                        xmlns:xhtml="http://www.w3.org/1999/xhtml"
                        xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                        title="X3D Graphics Validity Checks using Schematron"
                        schemaVersion=""><!--   
		   
		   
		 --><svrl:active-pattern document="file:/C:/x3d-code/www.web3d.org/x3d/content/examples/X3dForWebAuthors/Chapter12EnvironmentSensorSound/SoundFileFormats.x3d"/>
   <svrl:fired-rule context="X3D | *[(upper-case(local-name()) = 'X3D')]"/>
   <svrl:fired-rule context="head | *[(lower-case(local-name()) = 'head')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="Scene | *[(lower-case(local-name()) = 'scene')]"/>
   <svrl:fired-rule context="WorldInfo"/>
   <svrl:fired-rule context="Background"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:fired-rule context="Sound"/>
   <svrl:successful-report test="not(@USE) and (@minBack &gt; @maxBack) and (@minBack &gt; 0) and (@maxBack &gt; 0)"
                           role="error"
                           location="/X3D/Scene/Transform[1]/Sound">
      <svrl:text>&lt;Sound DEF=''/&gt; minBack='20' maxBack='100' has minBack value greater than maxBack value </svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="not(@USE) and (@minFront &gt; @maxFront) and (@minFront &gt; 0) and (@maxFront &gt; 0)"
                           role="error"
                           location="/X3D/Scene/Transform[1]/Sound">
      <svrl:text>&lt;Sound DEF=''/&gt; minFront='20' maxFront='100' has minFront value greater than maxFront value </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="AudioClip"/>
   <svrl:fired-rule context="ROUTE | *[(upper-case(local-name()) = 'ROUTE')]"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="Appearance"/>
   <svrl:fired-rule context="Material"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="IndexedFaceSet | IndexedLineSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="Appearance"/>
   <svrl:fired-rule context="Material"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Anchor"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="Appearance"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:fired-rule context="Sound"/>
   <svrl:successful-report test="not(@USE) and (@minBack &gt; @maxBack) and (@minBack &gt; 0) and (@maxBack &gt; 0)"
                           role="error"
                           location="/X3D/Scene/Transform[3]/Sound">
      <svrl:text>&lt;Sound DEF=''/&gt; minBack='20' maxBack='100' has minBack value greater than maxBack value </svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="not(@USE) and (@minFront &gt; @maxFront) and (@minFront &gt; 0) and (@maxFront &gt; 0)"
                           role="error"
                           location="/X3D/Scene/Transform[3]/Sound">
      <svrl:text>&lt;Sound DEF=''/&gt; minFront='20' maxFront='100' has minFront value greater than maxFront value </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="AudioClip"/>
   <svrl:successful-report test="(string-length(@url) &gt; 2) and not(contains(@url,'.wav')) and not(contains(@url,'.mid')) and not(contains(@url,'.midi'))"
                           role="warning"
                           location="/X3D/Scene/Transform[3]/Sound/AudioClip">
      <svrl:text>&lt;AudioClip DEF='Testing123stereoMp3AudioClip'/&gt; url array does not contains link to .wav or .midi sound files, browsers not required to support other formats (url='"audio/Testing123stereo.mp3" "http://X3dGraphics.com/examples/X3dForWebAuthors/Chapter12EnvironmentSensorSound/audio/Testing123stereo.mp3"') </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="ROUTE | *[(upper-case(local-name()) = 'ROUTE')]"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="Appearance"/>
   <svrl:fired-rule context="Material"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Anchor"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="Appearance"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:fired-rule context="Sound"/>
   <svrl:successful-report test="not(@USE) and (@minBack &gt; @maxBack) and (@minBack &gt; 0) and (@maxBack &gt; 0)"
                           role="error"
                           location="/X3D/Scene/Transform[5]/Sound">
      <svrl:text>&lt;Sound DEF=''/&gt; minBack='20' maxBack='100' has minBack value greater than maxBack value </svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="not(@USE) and (@minFront &gt; @maxFront) and (@minFront &gt; 0) and (@maxFront &gt; 0)"
                           role="error"
                           location="/X3D/Scene/Transform[5]/Sound">
      <svrl:text>&lt;Sound DEF=''/&gt; minFront='20' maxFront='100' has minFront value greater than maxFront value </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="AudioClip"/>
   <svrl:fired-rule context="ROUTE | *[(upper-case(local-name()) = 'ROUTE')]"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="Appearance"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Anchor"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="Appearance"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:fired-rule context="Sound"/>
   <svrl:successful-report test="not(@USE) and (@minBack &gt; @maxBack) and (@minBack &gt; 0) and (@maxBack &gt; 0)"
                           role="error"
                           location="/X3D/Scene/Transform[7]/Sound">
      <svrl:text>&lt;Sound DEF=''/&gt; minBack='20' maxBack='100' has minBack value greater than maxBack value </svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="not(@USE) and (@minFront &gt; @maxFront) and (@minFront &gt; 0) and (@maxFront &gt; 0)"
                           role="error"
                           location="/X3D/Scene/Transform[7]/Sound">
      <svrl:text>&lt;Sound DEF=''/&gt; minFront='20' maxFront='100' has minFront value greater than maxFront value </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="AudioClip"/>
   <svrl:successful-report test="(string-length(@url) &gt; 2) and not(contains(@url,'.wav')) and not(contains(@url,'.mid')) and not(contains(@url,'.midi'))"
                           role="warning"
                           location="/X3D/Scene/Transform[7]/Sound/AudioClip">
      <svrl:text>&lt;AudioClip DEF='Testing123stereoAiffAudioClip'/&gt; url array does not contains link to .wav or .midi sound files, browsers not required to support other formats (url='"audio/Testing123stereo.aiff" "http://X3dGraphics.com/examples/X3dForWebAuthors/Chapter12EnvironmentSensorSound/audio/Testing123stereo.aiff"') </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="ROUTE | *[(upper-case(local-name()) = 'ROUTE')]"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="Appearance"/>
   <svrl:fired-rule context="Material"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Anchor"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="Appearance"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Box | Cone | Cylinder | Sphere"/>
   <svrl:fired-rule context="Appearance"/>
   <svrl:fired-rule context="Material"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="Appearance"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="Appearance"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="Appearance"/>
</svrl:schematron-output>