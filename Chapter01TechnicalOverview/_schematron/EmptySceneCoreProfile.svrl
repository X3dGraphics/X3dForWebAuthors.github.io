<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<svrl:schematron-output xmlns:xs="http://www.w3.org/2001/XMLSchema"
                        xmlns:schold="http://www.ascc.net/xml/schematron"
                        xmlns:iso="http://purl.oclc.org/dsdl/schematron"
                        xmlns:xhtml="http://www.w3.org/1999/xhtml"
                        xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                        title="X3D Graphics Validity Checks using Schematron"
                        schemaVersion=""><!--   
		   
		   
		 --><svrl:active-pattern document="file:/C:/x3d-code/www.web3d.org/x3d/content/examples/X3dForWebAuthors/Chapter01TechnicalOverview/EmptySceneCoreProfile.x3d"/>
   <svrl:fired-rule context="X3D | *[(upper-case(local-name()) = 'X3D')]"/>
   <svrl:successful-report test="not($profileSufficient) and not(/X3D/head/component)" role="error"
                           location="/X3D">
      <svrl:text>&lt;X3D profile='Core'&gt; doesn't match contained nodes, increase profile or add needed &lt;X3D&gt;&lt;head&gt;&lt;component&gt; statements </svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="$profileLegal and not($profileMatch) and not(/X3D/head/component) and $interchangeProfile"
                           role="info"
                           location="/X3D">
      <svrl:text>&lt;X3D profile='Core'&gt; is defined, but nodes in scene have actual profile='Interchange' </svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="$profileLegal and not($profileSufficient) and not(/X3D/head/component) and $interchangeProfile and not($fullProfile) and not($immersiveProfile) and not($interactiveProfile)"
                           role="info"
                           location="/X3D">
      <svrl:text>&lt;X3D profile='Core'&gt; is defined, but nodes in scene have actual profile='Interchange', ensure &lt;X3D&gt;&lt;head&gt;&lt;component&gt; statements are sufficient to provide coverage </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="head | *[(lower-case(local-name()) = 'head')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta[(@name='error') or (@name='warning') or (@name='hint') or (@name='info') or starts-with(@name,'TODO')]"/>
   <svrl:successful-report test="true()" role="diagnostic" location="/X3D/head/meta[7]">
      <svrl:text>&lt;meta name='TODO' content='should Metadata nodes inherit from X3DNode or X3DChildNode?'/&gt;</svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta[(@name='error') or (@name='warning') or (@name='hint') or (@name='info') or starts-with(@name,'TODO')]"/>
   <svrl:successful-report test="true()" role="diagnostic" location="/X3D/head/meta[9]">
      <svrl:text>&lt;meta name='info' content='Increase X3D profile (or add component statements) to match if any other X3D nodes are added to this scene.'/&gt;</svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="Scene | *[(lower-case(local-name()) = 'scene')]"/>
   <svrl:fired-rule context="WorldInfo"/>
   <svrl:fired-rule context="WorldInfo"/>
   <svrl:successful-report test="not(@USE) and (string-length(@title) gt 0) and (string-length(preceding::WorldInfo/@title) gt 0)"
                           role="warning"
                           location="/X3D/Scene/WorldInfo[2]">
      <svrl:text>&lt;WorldInfo DEF='' title='EmptySceneCoreProfile.x3d'/&gt; and &lt;WorldInfo DEF='' title='EmptySceneCoreProfile.x3d'/&gt; have both defined window title</svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="MetadataSet"/>
   <svrl:fired-rule context="MetadataBoolean"/>
   <svrl:fired-rule context="MetadataFloat | MetadataDouble"/>
   <svrl:fired-rule context="MetadataFloat | MetadataDouble"/>
   <svrl:fired-rule context="MetadataInteger"/>
   <svrl:fired-rule context="MetadataString"/>
</svrl:schematron-output>